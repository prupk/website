qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "myaseen208"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 %>%
names()
PkgMYaseen208 %>%
fselect(package)
PkgMYaseen208 <-
pkg_search(
query  = "myaseen208@gmail.com"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 %>%
names()
PkgMYaseen208 %>%
fselect(package)
PkgMYaseen208 <-
pkg_search(
query  = "myaseen208@gmail.com"
, format = c("short", "long")[2]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 %>%
names()
PkgMYaseen208 %>%
fselect(package)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgsearch)
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 %>%
names()
PkgMYaseen208 %>%
fselect(package)
PkgMYaseen208 %>%
pull.(package)
ps("networks")
more()
cran_package_history("agritutorial")
cran_package_history("agriTutorial")
cran_package_history("agriTutorial") %>% view()
cran_trending()
cran_top_downloaded()
cran_events()
?cran_events()
cran_events(releases = TRUE, archivals = TRUE, limit = 50, from = 1)
?cran_top_downloaded()
?cran_trending()
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[2]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgsearch)
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
qDT() %>%
roworder(-date)
PkgMYaseen208
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
)
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
)
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "Yaseen"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
) %>%
as.data.frame() %>%
roworder(-date)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
query  = "MYaseen208"
, format = c("short", "long")[1]
, from   = 1
, size   = 50
)
PkgMYaseen208
PkgMYaseen208 <-
pkg_search(
#   query  = "MYaseen208"
# , format = c("short", "long")[1]
# , from   = 1
# , size   = 50
)
PkgMYaseen208
?pkg_search
install.packages("bib2df")
library(pak)
pkg_install("bib2df")
library(bib2df)
path <- system.file("extdata", "LiteratureOnCommonKnowledgeInGameTheory.bib", package = "bib2df")
df <- bib2df(path)
df
library(tidyverse)
library(tidytable)
library(fastverse)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
py
App.stop()
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
library(stringr)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
githubPackages <-
github_update(auto.install = FALSE) %>%
qDT() %>%
frename(package = Package)
dt12 <-
reduce(
.x = list(dt1, dt2, githubPackages)
, .f = left_join.
, by = "Package"
) %>%
fselect(Package, InstalledVersion, CRANVersion, gh_version = 6) %>%
qDT() %>%
fsubset(is.na(gh_version)) %>%
# fsubset(InstalledVersion != CRANVersion) %>%
fmutate(
InstalledVersion = as.numeric(str_remove_all(string = InstalledVersion, pattern = "(?<=\\..{0,10})\\.|-"))
, CRANVersion      = as.numeric(str_remove_all(string = CRANVersion, pattern = "(?<=\\..{0,10})\\.|-"))
) %>%
fsubset(InstalledVersion < CRANVersion) %>%
funique()
dt12
unloadNamespace(
dt12 |>
# fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
)
install.packages(
dt12 |>
# fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
)
install.packages(dput(pull.(dt12, Package)))
install.packages(
c("MASS", "Matrix", "XML", "boot", "class", "codetools", "foreign",
"ggrepel", "nlme", "nlme", "spatial", "survival")
)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
library(stringr)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
githubPackages <-
github_update(auto.install = FALSE) %>%
qDT() %>%
frename(package = Package)
dt12 <-
reduce(
.x = list(dt1, dt2, githubPackages)
, .f = left_join.
, by = "Package"
) %>%
fselect(Package, InstalledVersion, CRANVersion, gh_version = 6) %>%
qDT() %>%
fsubset(is.na(gh_version)) %>%
# fsubset(InstalledVersion != CRANVersion) %>%
fmutate(
InstalledVersion = as.numeric(str_remove_all(string = InstalledVersion, pattern = "(?<=\\..{0,10})\\.|-"))
, CRANVersion      = as.numeric(str_remove_all(string = CRANVersion, pattern = "(?<=\\..{0,10})\\.|-"))
) %>%
fsubset(InstalledVersion < CRANVersion) %>%
funique()
dt12
pkg_install(
pkg          = dt12 |>
# fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
getwd()
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
library(stringr)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
githubPackages <-
github_update(auto.install = FALSE) %>%
qDT() %>%
frename(package = Package)
dt12 <-
reduce(
.x = list(dt1, dt2, githubPackages)
, .f = left_join.
, by = "Package"
) %>%
fselect(Package, InstalledVersion, CRANVersion, gh_version = 6) %>%
qDT() %>%
fsubset(is.na(gh_version)) %>%
# fsubset(InstalledVersion != CRANVersion) %>%
fmutate(
InstalledVersion = as.numeric(str_remove_all(string = InstalledVersion, pattern = "(?<=\\..{0,10})\\.|-"))
, CRANVersion      = as.numeric(str_remove_all(string = CRANVersion, pattern = "(?<=\\..{0,10})\\.|-"))
) %>%
fsubset(InstalledVersion < CRANVersion) %>%
funique()
dt12
pkg_install(
pkg          = dt12 |>
# fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
# rm(list = ls())
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Consultancy/PRU/Website/Website")
getwd()
# renv::snapshot()
library(rmarkdown)
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Consultancy/PRU/Website/Website")
# renv::snapshot()
library(rmarkdown)
library(quarto)
quarto_render()
quarto_preview()
quarto_render()
quarto_preview()
quarto_preview_stop()
quarto_serve()
